<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE root [
<!ENTITY nbsp "&#160;">
<!ENTITY reg "&#174;">
]>
<html xmlns:frx="urn:FrxReports">
<head>
<title>Forena Report Editor</title>
<frx:category>Help</frx:category>
<frx:options hidden="1" />
<frx:fields>
  <frx:field id="title" link="reports/help.reportingwysiwyg#{link}" />
	<frx:field id="admin_reports" link="admin/structure/forena">admin/structure/forena</frx:field>
	<frx:field id="my_reports" link="forena" target="_self">My Reports</frx:field>
	<frx:field id="repords_add" link="reports/add">reports/add</frx:field>
	  <frx:field id="crosstab_template" link="reports/help.renderers#frxcrosstab"
    target="_blank">Crosstab template</frx:field>
  <frx:field id="svggraph_template" link="reports/help.renderers#frxsvggraph"
    target="_blank">SVG Graph template</frx:field>
</frx:fields>
<frx:parameters />
<frx:docgen />
</head>
<body>
  <div class="toc" id="help-toc-1" frx:block="forena_help/reportingwysiwyg_topics">
    <h3>Including</h3>
    <ul>
      <li id="help-toc-2" frx:foreach="/book/chapters/chapter">{title}<span frx:if="{subtitle}">: {subtitle}.</span></li>
    </ul>

  </div>
	<h2 id="intro">Introduction</h2>
	<p>
		Forena is built of the idea of using <abbr title="Structered Query Language">SQL</abbr> to get the data out of a database, and
		get that data out on the web with very little work to do so. It is designed to leverage knowledge of <abbr
			title="HyperText Markup Language">HTML</abbr>, <abbr title="Cascading Style Sheets">CSS</abbr>, <abbr
			title="Structered Query Language">SQL</abbr> and JavaScript to help you create rich interactive web reports and/or graphs
		(charts).
	</p>
	<p>
		A <strong>What You See Is What You Get </strong>(WYSIWYG) compatible report editor is provided to make the creation of a basic
		reports very easy. You don't have to know <abbr title="eXtensible HyperText Markup Language">XHTML</abbr> and <abbr
			title="Cascading Style Sheets">CSS</abbr> to create a simple report, but the more you now about <abbr
			title="HyperText Markup Language">HTML</abbr> and <abbr title="Cascading Style Sheets">CSS</abbr>, the more you will be able
		to achieve by leveraging your <abbr title="HyperText Markup Language">HTML</abbr>/<abbr title="Cascading Style Sheets">CSS</abbr>
		knowledge.
	</p>
	<p>
		The main differences with other open source reporting solutions such as {JasperReports} <sup>&reg;</sup> or {mondrian} are:
	</p>

	<ol>
		<li>Forena leverages <abbr title="HyperText Markup Language">HTML</abbr> and <abbr title="eXtensible Markup Language">XML</abbr>
			in ways that these report engines do not. In Forena everything is <abbr title="eXtensible HyperText Markup Language">XHTML</abbr>
			natively, so that is your templating language. This means rather than having users enter parameters, most often they are
			doing <em>click-through</em> drilling down to their data. Forena produces paper as a secondary thing rather than a primary
			concern. We are NOT interested in printing most of the time, but rather exploring the data.
		</li>
		<li>Forena lets you consume hierarchical data from non-relational sources such as RSS feeds, etc (anything in <abbr
			title="eXtensible Markup Language">XML</abbr> format) and has special considerations for databases that can generate <abbr
			title="eXtensible Markup Language">XML</abbr> natively (e.g. Postgres or Oracle SQL).
		</li>
		<li>Forena is designed to make generating data sources and reports be really report developer friendly. Data sources
			(called data blocks) are files that can be version controlled and stuffed. They are often parameterized <abbr
			title="Structered Query Language">SQL</abbr> files, so they don't take much to use. Time from a good select statement to a
			report is typically 5 minutes or less.
		</li>
		<li>Forena doesn't require a Java stack! So you can install it on a hosting service, etc.</li>
	</ol>
	<p>
		Novice users may want to start by creating reports using the built-in <abbr title="What You See Is What You Get">WYSIWYG</abbr>
		report editor. Users with knowledge of <abbr title="eXtensible HyperText Markup Language">XHTML</abbr>, <abbr
			title="Cascading Style Sheets">CSS</abbr> and <abbr title="eXtensible Markup Language">XML</abbr> may choose to edit the
		report definition files (= files with a .frx extension) directly, or edit reports without using the <abbr
			title="What You See Is What You Get">WYSIWYG</abbr> report editor (the <a href="./help.reportingfrx.intro" target="_self"><abbr
			title="Forena Report XML">FRX</abbr> Reporting Guide</a> is available for those who are interested in doing so).
	</p>
	<h2 id="create">Create Report</h2>
	<p>To create a new report using the WYSIWYG report editor, use either of these methods to do so:</p>
	<ul>
		<li>Simply go to URL {reports/add}</li>
		<li>Use the menu option Create Report, which is typically located in the navigation menu block, provided it has been
			enabled by your site administrator during Forena's administration, as explained within {enable_create_report}.</li>
		<li>Visit the {admin_reports} page and select the Create New Report link on that page (site administrators may have
			relocated this page so contact your site administrator if you have trouble finding it).</li>
	</ul>
	<h3>Complete the Create Report screen</h3>
	<p>
		The <strong>Title</strong> field indicates the title of the report as it will appear for the user. In this example we'll use
		"Test Simple Report" as the title of our report.
	</p>
	<p>
		The <strong>Report Name</strong> is a unique name that is used to store (save) the specifications of your report. This report name consist of a <strong>directory
    name</strong>, followed by a <strong>/</strong>, and then followed by a <strong>file name</strong>. In this example we
		will use test/simple as the Report Name, which implies that our report will be stored in directory <strong>test</strong>, and
		that the filename of our report will be <strong>simple.frx</strong> (note the .frx file extension that is added to the
		filename).
	</p>
	<p>
		For this simple report, you can leave the remaining fields blank, and hit the CREATE button. After doing so, you'll
		be taken to the Report Editing screen, which has an URL like /reports/test.simple/edit.
		Notice the warning message at the top of this edit screen, which states "All changes are stored temporarily. Click Save to
		make your changes permanent. Click Cancel to discard your changes.".
	</p>
	<h3>Select additional report features</h3>
	<p>
		The previous steps are the used steps to create a brand new report from scratch. After completing these steps the report only
		contains our report title. In subsequent steps, and depending on your requirements, you may want to add other features to your
		report, which can be done using the Report Editing screen of our
		test/simple report. This report editing screen will be used for features such as:
	</p>
	<ul>
		<li>Specifying the data blocks (= the details of the data) we want to include (show) in our report.</li>
		<li>Features available via the tabs near the top of the report editing screen (by just clicking on these tabs), i.e.:
			<ul>
				<li><strong>General</strong>: General Report Options.</li>
				<li><strong>Document Types</strong>: Select Document Types.</li>
				<li><strong>Layout</strong>: Report Layout Options.</li>
				<li><strong>Parameters</strong>: Edit Report Parameters.</li>
			</ul>
		</li>
		<li>Configure Report Fields (such as their formatting, adding hyperlinks, etc).</li>
	</ul>
	<p>We'll be exploring all those features in subsequent steps of this tutorial. For now let's just move on to actually
		saving our minimalistic report (so that we can retrieve it later on to continue adding those other features).</p>
	<h3>Save the report specifications</h3>
	<p>
		At this point we have to decide if we yes or no want to save the report specifications of our test/simple report. To actually
		SAVE them, use the <strong>Save</strong> button on the Report Editing screen. To not save any of the specifications of our
		report, use the <strong>Cancel</strong> button on the Report Editing screen.
	</p>
	<p>Saving the report will actually store all details (specifications) of our test/simple report (in the .frx file we
		specified in the beginning), and display an informational message at the top of the screen, which states "Your report,
		test/simple has been saved.". Voil√†!</p>
	<p>Note that your test/simple report will NOT (yet) show up in the list of reports shown via menu item {my_reports} (try it
		to convince yourself ...). That's because we have not specified a category yet for our report, something we'll be doing via
		the General Tab later on.</p>
	<h3>Retrieving your report</h3>
	<p>To retrieve your report later on, go to URL /reports/test.simple. Doing so will regenerate the report output (e.g. by
		executing the SQL queries contained in the data blocks again), and present that to you (in view mode). If you want to change
		the report specifications, you can do so by clicking on the tiny edit icon, which will open the report editing screen.</p>
	<h2 id="datablocks">Data Blocks</h2>
	<p>Data blocks correspond to a specific query to a database or application. These data blocks are typically provided
		(created or installed) by your site administrator or your reports developer.</p>
	<h3>Adding a first Data Block to your report</h3>
	<p>
		Data blocks can be added to a report via the Report Editing screen. To
		add such a data block to our test/simple report, click on the tiny icon with a green plus sign (which says "Insert Data" if
		you move your mouse pointer over it) which can be found on the Report Editing screen (if you're not yet on the report editing
		screen, you can access it by clicking on the tiny edit icon shown when viewing the report). After doing so, you will be taken
		to the <strong>Select Data Block</strong> screen. Select a data block to be used on the report. You may search for the name of
		any provided data blocks.
	</p>
	<p>
		For this report, we'll use one of the sample queries, i.e. <strong>sampledb/users_by_state</strong>. Select this data block by
		just clicking on it, which will take you to the <strong>Preview Data Block</strong> screen. If the selected data block was
		designed using parameters (such as the <strong>sampledb/distribution</strong>, for which the SQL query uses a parameter that
		represents the code of the state), you'll be prompted to enter a value for such parameters first (after which the Preview Data
		Block screen is shown also).
	</p>
	<p>The Preview Data Block screen gives you a preview of the data included in the data block you selected. This preview
		shows a sample table layout of the data returned by that data block. You may need to specify required parameters in a report
		in order to generate sample data before your report preview can be created (note that you cannot use the editor to add data to
		the report unless you can provide parameters that cause the query to actually return data). Keep pressing Preview until you
		see the data that you're expecting in the report. Don't worry if the preview shows too many fields, or isn't quite in the
		right format. You'll be able to control that in the Layout tab later on.</p>
	<p>
		To confirm your data block selection press the <strong>Select</strong> button, which will take you to the <strong>Add
			Data</strong> screen (if you do not want to confirm your selection, hit the back button in your browser). Using the Add Data screen
		you can customize the columns of the selected data block (their order, which ones to include/exclude, etc), and optionally
		enter a header for it. You can also select any of the available data block <strong>templates</strong> to decide the basic look
		and feel of the data block that you are adding to the report. Some of these templates are straight forward, such as the <strong>Simple
			Table display</strong>. Here are some of the more sophisticated data block templates to choose from (including a link with details
		about their corresponding renderers and FRX syntax, which includes some examples using these templates also):
	</p>
	<ul>
		<li>{crosstab_template}.</li>
		<li>{svggraph_template}.</li>
	</ul>
	<p>
		<strong>Note:</strong> by using the WYSIWYG editor you don't have to know (worry) about the .frx syntax of any of these
		templates (the relevant html constructs get created automatically).
	</p>
	<p>Use the Preview button to see the effects of your customizations. Feel free to experiment with these templates to get a
		report that looks as close as possible to the design you are looking for. Note that you will be able to further customize
		these layouts later on by using the layout tab on the report editor screen.</p>
	<p>
		When you're finished selecting your customizations on the Add Data screen, use the <strong>Insert</strong> button to actually
		add the selected data block (and the customizations you selected) to the report. If you do not want to add the selected data
		block, use the <strong>Cancel</strong> button instead.
	</p>
	<h3>Adding additional Data Blocks to your report</h3>
	<p>
		The steps required for adding additional Data Blocks to your report are mostly similar to the steps to add a first Data Block
		to your report (as detailed above, using the tiny icon with a green plus sign). If the additional data block is to be inserted
		before the already existing one, use the icon <strong>above</strong> the existing data block. If however the additional data
		block is to be inserted after the already existing one, use the icon <strong>below</strong> the existing data block.
	</p>
	<h3>Editing Data Blocks in your report</h3>
	<p>Sometimes you may want to modify (edit) the specifications of an existing data block in a report, here are a few samples
		why you'd want to do so:</p>

	<ul>
		<li>Add some extra columns to the report (assuming they are already included in the SQL query related to the data block,
			but for some reason not (yet) shown on the report).</li>
		<li>Remove some of the existing columns in the report (which will not remove them from the SQL query related to the data
			block however).</li>
	</ul>
	<p>
		To edit an existing data block in the report, go to the report edit screen and click on the hyperlink related to the data
		block to be edited. This will take you to the <strong>Edit Block</strong> screen. The features available on this Edit Block
		screen are identical to those on the <strong>Add Data</strong> screen (which is shown when you add a new data block).
	</p>
	<h3>Removing Data Blocks from your report</h3>
	<p>
		If you want to remove a data block from the report, go to the report edit screen and click on the tiny icon (with a red minus
		sign, and which says "Remove Data" if you move your mouse pointer over it). After doing so, you will be taken to a screen that
		says something like <strong>Are you sure you would like to remove the ... content</strong>. Select the <strong>Yes</strong>
		button to confirm the removal of the data block from your report (or <strong>No</strong> to cancel your request).
	</p>
	<h2 id="general">General</h2>
	<p>
		Using the <strong>General</strong> tab on the report editing screen, you can specify various general options of the report (if
		you're not yet on the report editing screen, you can access it by clicking on the tiny edit icon shown when viewing the
		report).
	</p>
	<p>Explanation of the available options on this form are as follows:</p>
	<ul>
		<li><strong>Title</strong> - The title of the report, which can be used to modify the original title that was entered
			when the report was first created.</li>
		<li>Use the <strong>Visibility</strong> options to enter these specifications of the report:
			<ul>
				<li><strong>Category</strong> - This controls under which group the report appears under the {my_reports} list (a
					report without a category will not show up in it).</li>
				<li><strong>Hidden</strong> - Checking this checkbox will cause the report not to be listed in the {my_reports} list
					(regardless of the Category set).</li>
			</ul>
		</li>
		<li><strong>Menu</strong> - Click on the menu link to expand it so that some additional options related to it become
			visible. By checking (turning on) the <strong>Provide a menu link</strong> checkbox, some additional options will become
			available to actually specify the various options to create a Drupal menu pointing to the report, i.e.:
			<ul>
				<li><strong>Menu Path</strong> - The site relative path for the menu item (parameters may be embedded in the url using
					a :parm syntax, e.g. states/:state.</li>
				<li><strong>Additional Arguments </strong> - Additional parameters that should be extracted after the menu path using a
					:parm syntax, e.g. :parma/:parmb.</li>
				<li><strong>Type of menu to create</strong> - Use standard conventions for creating a menu item in the format of normal
					menu items, tabbed menus, etc.</li>
			</ul> <strong>Note</strong>: changes to values of options such as <strong>Menu Path</strong> or <strong>Type of menu to
				create</strong> only become active (visible) after {clear_drupal_cache} (at least the one for menus).</li>
		<li id="report-caching"><strong>Cache</strong> - Click on the cache link to expand it so that some additional options
			related to it become visible. These additional options can be used to enable some options related to the caching of the
			report, which is a technique to reduce the resources required for rendering the report, in situations such as:
			<ul>
				<li>reports containing data that don't change a lot (e.g. you know that the nature of the report's data only change on
					a daily basis).</li>
				<li>reports that are about some pretty hefty analysis, e.g. with GROUP BY (SQL) queries that give sums/aggregates for
					10's of thousands of rows. These reports might have a render time of about 3-5 seconds (mostly the SQL run time). That's a
					bit slow and the data might be changing slowly. So by creating cached versions of such reports the server won't be overly
					taxed.</li>
			</ul> These are the available caching options:
			<ul>
				<li><strong>Duration</strong> - The duration that a cached report remains in the cache (before the cache is refreshed
					with an updated version of the report). Use <a href="http://php.net/manual/en/datetime.formats.relative.php"
					target="_blank"> relative formats</a> according to the php documentation.</li>
				<li><strong>Per User </strong> - Indicate if you want the cache to be by user.</li>
				<li><strong>Per Document Type</strong> - Indicate if you want the cache to be by Document Type.</li>
			</ul></li>
	</ul>
	<p>
		<strong>Hint</strong>: when we first created the test/simple report, it didn't show up yet in the list of reports shown via
		menu item {my_reports}. Now is the time to enter a (new or existing) category for your report. After saving your updated
		report specifications, it should show up in the list of reports shown via menu item {my_reports}.
	</p>
	<p>
		You can prepare for saving all the changes you made to the General Report Options via the <strong>Update</strong> button (if
		you do not want to save these changes, hit the <strong>Cancel</strong> button).
	</p>
	<h2 id="doctypes">Document Types</h2>
	<p>The actual output of any report or graph is created in the format of an HTML document, which can optionally be saved
		(converted) in several common document formats.</p>
	<p>
		As an example, all supported report formats were enabled for this specific tutorial report (which, if enabled by your site
		administrator, caused the creation of the various hyperlinks labeled with <strong>csv</strong>, <strong>html</strong>, <strong>doc</strong>,
		etc.).
	</p>
	<p>The exact list of options that will be available (allowed) to select from in your report is determined by your site
		administrator, who may have enabled one or more of these options:</p>
	<table>
		<tr>
			<th>csv</th>
			<td>Comma Separated Values.</td>
		</tr>
		<tr>
			<th>email</th>
			<td>eMail message.</td>
		</tr>
		<tr>
			<th>html</th>
			<td>HyperText Markup Language.</td>
		</tr>
		<tr>
			<th>svg</th>
			<td>Scalable Vector Graphics.</td>
		</tr>
		<tr>
			<th>doc</th>
			<td>MS Word format.</td>
		</tr>
		<tr>
			<th>xls</th>
			<td>MS Excel format.</td>
		</tr>
		<tr>
			<th>xml</th>
			<td>eXtensible Markup Language.</td>
		</tr>
	</table>
	<p>For each of the options enabled by your site administrator, an additional administration option is configured to
		indicate if they should be enabled or disabled by default when creating a new report (whereas this default may be changed by
		editing the report specifications).</p>
	<p>
		Using the <strong>Document Types</strong> tab on the report editing screen, you can check one or more of the
		available options to add a corresponding link to your report (if you're not yet on the report editing screen, you can access
		it by clicking on the tiny edit icon shown when viewing the report). Using these links on the actual output of the
		report, will export it in the corresponding document format.
	</p>
	<p>
		You can prepare for saving all the changes you made to the Document Types via the <strong>Update</strong> button (if you do
		not want to save these changes, hit the <strong>Cancel</strong> button).
	</p>
	<h2 id="layout">Layout</h2>
	 <p>
    Using the <strong>layout</strong> tab on the report editing screen, you can specify various layout options of the report (if
    you're not yet on the report editing screen, you can access it by clicking on the tiny edit icon shown when viewing the
    report).
  </p>
  <p>Explanation of the available options on this form are as follows:
  </p>
  <table>
    <tbody>
      <tr>
        <th>Skin</th>
        <td><p>The skin of a report determines the look and feel of the report and allows you to leverage a common set of CSS and
          JavaScript libraries to make the most out of your reports. In conventional report writers this can be thought of as what
          kind of paper form the report printed on. These days most layout is controlled by Cascading Style Sheets (CSS) and
          JavaScript libraries.</p>
          <p> A site administrator may enable additional report skins by creating corresponding .skinfo
          files. These .skinfo files define which specific CSS files and JavaScript files will get included when that skin is
          selected in a report. </p>
          <p>
          See the Skins section of this document for more information on definiing custom skins.</p>  
        </td>
      </tr>
      <tr>
        <th>Body</th>
        <td>
           Here you can edit directly the contents of the report.  This can be used when you need more customization than can be provided using 
           the custom templates provided by forena.  For more information how to specify a proper body section and the use of the special frx attributes 
           in the html, see the section on frx reporting. 
        </td>
      </tr>
      <tr>
        <th>CSS Styles</th>
        <td><p>Specify small CSS snippets that can be used anywhere in the report, as in this example:</p>
            <style frx:renderer="FrxSource">div.FrxTable { line-height: 2.5; color: #FF6633; }</style>
          <p>This will change the look-and-feel of the table content a little bit. In this specific case the height of the
          table rows will be higher then the height for standard table displays, while the color of the text in the table cells is
          shown in a kind of orange.</p>
        </td>
      </tr>
    </tbody>
  </table>
  <p>
    You can prepare for saving all the changes you made to the Layout Options via the <strong>Update</strong> button (if you do
    not want to save these changes, hit the <strong>Cancel</strong> button).
  </p>
  <h2 id="parameters">Parameters</h2>
    <p>
    Parameters can be used to provided inputs to a report. Using the <strong>Parameters</strong> tab on the report editing screen,
    you can enter new report parameters, and/or edit or delete existing parameters (if you're not yet on the report editing
    screen, you can access it by clicking on the tiny edit icon shown when viewing the report).
  </p>
  <p>
    To add a new parameter, click on the General tab, and then click on the link that says <strong>Add Parameter</strong>. After
    doing so, you will be taken to the <strong>Parameters</strong> screen. The following table describes the available options on
    this screen:
  </p>
  <table >
    <tbody>
      <tr>
        <th>label</th>
        <td>The label displayed to the user when prompted in the parameters form.</td>
      </tr>
      <tr>
        <th>id</th>
        <td>The unique id for the report parameter. Generally these must match exactly the parameters expected by the data values.</td>
      </tr>
    </tbody>
  </table>
  <p>
    Enter an appropriate value for each of these fields, and confirm them by pressing the <strong>Add</strong> button, which will
    take you to the next Edit screen (if you do not want to confirm your selection, hit the <strong>Cancel</strong> button).
  </p>
  <p>
    On the <strong>Parameters</strong> screen, click the tiny icon next to the report parameter you entered (which says 'Configure
    Parameter' if you move your mouse pointer over it). This will allow you to further configure the parameter (via the additional
    screen that is shown). The following table describes the available options on this screen:
    </p>
  <table>
    <tbody>
      <tr>
        <th>label</th>
        <td>The label displayed to the user when prompted in the parameters form.</td>
      </tr>
      <tr>
        <th>require</th>
        <td>Indicate of a value for this parameter is required to display the report. If there is not a default value, the user will be prompted to enter a value.</td>
      </tr>
      <tr>
        <th>default value</th>
        <td>Value to be used when none is specified.</td>
      </tr>
      <tr>
        <th>description</th>
        <td>Tell the users about what the parameter is used for as well as proper formats for entry.</td>
      </tr>
      <tr>
        <th>Input Control Type</th>
        <td>Indicates the type of control or widget used prompt for user input.</td>
      </tr>
      <tr>
        <th>Data Source</th>
        <td>Used in conjunction with the control field to determine which values will be made available to radio buttons, check-boxes or select lists. The value should be a <strong>data block</strong> that users of this report will have access to. Blocks should be written to return key value pairs for use in these controls. <strong>Note</strong>: this is indeed assumed to be a data <strong>block</strong>, and not a data <strong>source</strong>, even though the label here suggests so ...).</td>
      </tr>
      <tr>
        <th>Data Field</th>
        <td>The name of the column from the data block (specified via <strong>Data Source</strong>) that is used to populate the return <strong>values</strong> of the select or radio buttons (only applies if a data source is specified). If omitted, then the 1st column of the data block is used as the Data Field.</td>
      </tr>
      <tr>
        <th>Label Field</th>
        <td>The name of the column from the data block (specified via <strong>Data Source</strong>) that is used to populate the <strong>labels</strong> of select or radio buttons (only applies if a data source is specified). If omitted, then the 2nd column of the data block is used as the Label Field, provided such 2nd column exists (if not, then the 1st column is used instead).</td>
      </tr>
      <tr>
        <th>Options</th>
        <td>Used to configure the Input Control Type.</td>
      </tr>
      <tr>
        <th>Class</th>
        <td>Specify the html class to be applied to this parameter.</td>
      </tr>
    </tbody>
  </table>
  <p>
    Enter an appropriate value for each of these fields, and confirm them via the <strong>Update</strong> button (if you do not
    want to confirm your selection, hit the <strong>Cancel</strong> button). Pressing either button will take you to back to the
    previous Edit (parameters) screen. From there you can either repeat the process (to add another parameter, by using the <strong>Add
      Parameter</strong> link again), or you can prepare for saving all the changes you made to the report parameters via the <strong>Update</strong>
    button (if you do not want to save these changes, hit the <strong>Cancel</strong> button). This will return you to the report
    editing screen (on which you selected the parameters tab to apply changes to the report parameters). To remove any of the
    parameters shown on the Edit (parameters) screen, use the <strong>Remove</strong> button shown to the right of the parameter
    to be removed (before using the Update or cancel button on this screen).
  </p>
  <p>
    After you returned to the report editing screen, and assuming your report contains at least 1 report parameter, a new
    (expandable) <strong>Parameters</strong> link will be included also. Click on it to expand it, so that the various report
    parameter(s) options become visible (corresponding to the options you entered on the Edit (parameters) screen).
  </p>
  <h2 id="fields">Fields</h2>
  <p>Fields in the report are the tokens which are used to substitute data into the report. These report fields are found
    between the curly braces, and exists in multiple flavors:</p>

  <ul>
    <li>The data fields as contained in the report's data blocks (e.g. corresponding to various columns returned by the SQL
      query related to the data block).</li>
    <li>The fields defined on the spot while editing the report, and this by just typing the variable name (= token) of the
      field, surrounded by curly braces, anywhere within the body part of the report (via the layout tab).</li>
    <li>The fields corresponding to the arbitrary variables defined in a report skin file.</li>
  </ul>
  <p>
    When editing a report (via the report edit screen) you can click on the gear symbol which looks like <img
      src="/misc/configure.png" /> and is next to the first use of the particular report field (note that such field may be used
    multiple times in a report). By clicking on that gear symbol an edit screen is shown that allows for configuring the various
    properties for it, i.e.:</p>
  <ul>
    <li>The formatting of the field's output.</li>
    <li>The field's links to be created.</li>
    <li>The field's default value to be displayed if no value is present.</li>
  </ul>
  <p>
  The options available to configure these properties are further detailed below.
  </p>
  <h3>Field output formatting</h3>
  <p>
    Fields can be formatted a number of different ways depending on the format and format-string specified for each field. The
    following table illustrates the supported options (enter an <strong>*</strong> to get a list of all supported formats):
  </p>
  <table>
    <tbody>
      <tr>
        <th>Format</th>
        <th>Description</th>
        <th>Format String</th>
      </tr>
      <tr>
        <td>drupal_date_format</td>
        <td>Formats a Drupal date. Drupal dates are natively large numbers that are expressed as the number of seconds since
          the UNIX epoch date.</td>
        <td>Use <strong>small</strong>, <strong>medium</strong> or <strong>large</strong> to specify any of the site defined
          dates, or alternatively specify a custom date format. See <a href="http://php.net/manual/en/function.date.php"
          target="_blank">http://php.net/manual/en/function.date.php</a> for possibilities for custom formatting.
        </td>
      </tr>
      <tr>
        <td>drupal_node_content</td>
        <td>Loads content from the given nid and display it using teaser or full display.</td>
        <td>Specify <strong>teaser</strong> to get teaser view.
        </td>
      </tr>
      <tr>
        <td>drupal_translation</td>
        <td>Use Drupal's translation API to translate the value prior to display.</td>
        <td>Specify a field (if any) that contains the serialized data used for translations (e.g. watchdog table). Normally
          you can leave this blank.</td>
      </tr>
      <tr>
        <td>iso_date</td>
        <td>ISO standard dates are of the form, YYYY-MM-DD followed by a 24 hour timestamp (e.g. 2012-12-01 20:30:30). Dates in
          this format may be reformatted.</td>
        <td>Use <strong>small</strong>, <strong>medium</strong> or <strong>large</strong> to specify any of the site defined
          date formats, or alternatively specify a custom date format. See <a href="http://php.net/manual/en/function.date.php"
          target="_blank">http://php.net/manual/en/function.date.php</a> for possibilities for custom formatting.
        </td>
      </tr>
      <tr>
        <td>number</td>
        <td>Use the PHP number formatter function.</td>
        <td>Indicate a sample numeric format for decimal places and thousands separator. (eg. 9.999.00).</td>
      </tr>
      <tr>
        <td>sprintf</td>
        <td>Use PHP's sprintf function for adding labels and such.</td>
        <td>See <a href="http://us.php.net/manual/en/function.sprintf.php" target="_blank">http://us.php.net/manual/en/function.sprintf.php</a>
          for possibilities.
        </td>
      </tr>
    </tbody>
  </table>
  <h3>Field linking</h3>
  <p>Fields can be transformed into hyperlinks also. The following table illustrates the supported options:
  </p>
  <table>
    <tr>
      <th>Link</th>
      <td>Specify a site relative URL. When specified, all references to this field in the report will be displayed as a links
        to the URL specified.</td>
    </tr>
    <tr>
      <th>Pass through URL parameters</th>
      <td>Automatically pass through URL parameters on this link.</td>
    </tr>
    <tr>
      <th>rel</th>
      <td>Relationship attribute to apply to the link.</td>
    </tr>
    <tr>
      <th>class</th>
      <td>CSS class applied to be applied to the link.</td>
    </tr>
    <tr>
      <th>Target</th>
      <td>Specify a target of the page you want the window to open in. BLANK can be used to always open a page in a new
        window. If you specify a target beginning with the word "popup", {skin.forena} will automatically open up the window in a
        popup.</td>
    </tr>
  </table>
  <h3>Field default value</h3>
  <table>
    <tr>
      <th>Default Value</th>
      <td>The value to use when no value is present in the data.</td>
    </tr>
  </table>
  
</body>
</html>

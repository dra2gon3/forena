<?php
/**
 * Implementation of hook_menu. 
 *
 * @return array
 */
function forena_menu() { 
  $items = array(); 

  $items['admin/settings/forena'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('forena_settings'), 
    'title' => 'Forena Reports', 
    'description' => t('Tell Forena where to store report files and how users should access them.'),
    'access arguments' => array('administer forena reports'),
    'type' => MENU_NORMAL_ITEM, 
    'file' => 'forena.admin.inc', 
  );
 $items['admin/settings/forena/general'] = array(
    'title' => 'General', 
    'type' => MENU_DEFAULT_LOCAL_TASK, 
    'file' => 'forena.admin.inc', 
    'weight' => -10, 
  );
  
  $items['admin/settings/forena/formats']  = array(    
    'page callback' => 'drupal_get_form',
    'page arguments' => array('forena_doc_formats_settings'), 
    'title' => t('Document Types'), 
    'access arguments' => array('administer forena reports'),
    'type' => MENU_LOCAL_TASK,     
    'file' => 'forena.admin.inc',  
  );
  
  $items['reports/%'] = array(
    'page callback' => 'forena_report',
    'page arguments' => array(1), 
    'title' => t('Reports'),
    'access arguments' => array('access content'),  
    'type' => MENU_CALLBACK, 
    'file' => 'forena.common.inc', 
     ); 

   $items['reports/%/view'] = array(
    'title' => t('View'),
    'type' => MENU_DEFAULT_LOCAL_TASK, 
    'weight' => -10, 
    'file' => 'forena.common.inc',    
    'access arguments' => array('design any report'), 
   ); 
   
   $items['reports/%/edit'] = array(
     'title' => 'Edit',
     'page callback' => 'forena_edit_report',
     'page arguments' => array(1),
     'access arguments' => array('design any report'),     
     'description' => t('Edit the content of your node'),   
     'type' => MENU_LOCAL_TASK, 
     'file' => 'forena.common.inc', 
    );
   
    
  $items['forena'] = array(
    'page callback' => 'forena_user_reports',
    'page arguments' => array(), 
    'title' => t('My Reports'),
    'access arguments' => array('list reports'),  
    'type' => MENU_NORMAL_ITEM,
    'file' => 'forena.common.inc', 
   ); 
   
   $items['reports/%/fields'] = array(
     'title' => 'Fields',
     'page callback' => 'forena_fields_report',
     'page arguments' => array(1),
     'access arguments' => array('design any report'),     
     'description' => t('Edit the fields of your report'),        
     'type' => MENU_LOCAL_TASK, 
   );
  return $items; 
}
/**
 *  Calls forena_edit_form
 *  in forena.admin.inc   
 */
function forena_edit_report() {
  require_once('forena.admin.inc');  
  return drupal_get_form('forena_edit_form');
}

/**
 *  Calls forena_parameter_form
 *  in forena.common.inc
 */
function forena_parameters_report() {  
  require_once('forena.admin.inc');
  $desc = forena_report_desc();
  $name = $desc['name']; 
  $filename = $desc['filename'];
  $format = $desc['format']; 
  $report = forena_get_report($name); 
  if ($report) { 
    $r = forena_report_object();  
    return drupal_get_form('forena_parameters_form');
  } 
  else { 
    drupal_not_found(); 
  }
}

/**
 *  Calls forena_fields_form
 *  in forena.admin.inc
 */
function forena_fields_report() {
  require_once('forena.admin.inc');
  return drupal_get_form('forena_fields_form'); 
}


/**
 * Implementation of hook_perm
 *
 * @return unknown
 */
function forena_perm() { 
  $perms = array(
    'administer forena reports', 
    'list reports', 
    'create any report', 
    'design any report',    
    ); 
  //@TODO: Add the ability to create subrepositories with different permissions. 
  return $perms; 
}


function forena_user_reports() {   
  $result = db_query('SELECT * FROM {forena_reports} where hidden=0 ORDER BY category,title asc');
  $categories = array();
  while ($row = db_fetch_object($result)) {
    $access = TRUE; 
    $cache = $row->cache; 
       
    if ($cache) {            
      $cache = unserialize($cache);
      
      // Check each callback function to see if we have an error. 
      if ($cache['access']) foreach ($cache['access'] as $callback => $args) {
        if ($callback) foreach ($args as $arg) {
          $access = FALSE;            
          if (function_exists($callback)) { 
            $a = $callback($arg); 
          }
          if ($a) $access = TRUE;           
        } 
        else {          
          $access = TRUE; 
        }
      }
    }    
    if ($access) {      
      $categories[$row->category][] = array(
        'title' => $row->title, 
        'report_name' => $row->report_name, 
      );
    }   
  }
  $report_repos = variable_get('forena_path', 'reports'); 
  
  foreach ($categories as $category => $reports) {
    $output .= '<h3>'. $category .'</h3>';
    $output .= '<ul>'; 
    foreach ($reports as $r) { 
      $output .= '<li>'. l($r['title'], $report_repos .'/'. str_replace('/', '.', $r['report_name'])) .'</li>';  
    }
    $output .= '</ul       >'; 
  }
  return $output; 
}

/**
 * Render report with some data
 *
 * @param unknown_type $report
 * @param unknown_type $format
 * @param unknown_type $data
 * @return unknown
 */
function forena_render_report($report, $format='', $data='') {
  require_once('forena.common.inc');    
  $o = forena_report_object($report, $data);
  $output = $o->render($format);
  return $output; 
}

/**
 * Self register plugins with forena. 
 *
 */
function forena_forena_plugins() { 
  $plugins[] = array('file' => 'plugins/FrxPDO.inc', 
                     'class' => 'FrxPDO', 
                     );
  $plugins[] = array('file' => 'plugins/FrxOracle.inc', 
                     'class' => 'FrxOracle', 
                     );
  $plugins[] = array('file' => 'plugins/FrxDrupal.inc', 
                     'class' => 'FrxDrupal',
                     ); 
  $plugins[] = array('file' => 'plugins/FrxFiles.inc', 
                     'class' => 'FrxFiles',
                     ); 
  return $plugins; 
}

/**
 * Self register controls with forena. 
 *
 */
function forena_forena_controls() { 
  $controls[] = array('file' => 'plugins/FrxControls.inc', 
                     'class' => 'FrxControls', 
                     );  
  return $controls; 
}

/**
 * Load the report repository path
 *
 * @return unknown
 */
function forena_report_path() { 
  $report_path = variable_get('forena_report_repos', ''); 
  if (!$report_path) {
    $report_path = drupal_get_path('module', 'forena') . '/repos/reports';
  }
  return trim($report_path, '/'); 
}

/**
 * Helper function for current user for the drupal instance
 *
 * @return unknown
 */
function forena_current_user_uid() { 
  global $user; 
  return $user->uid; 
}

/**
 * Helper function for current user for the drupal instance
 *
 * @return unknown
 */
function forena_current_user_name() { 
  global $user; 
  return $user->name; 
}
